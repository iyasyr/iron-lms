services:
  db:
    image: mysql:8.0
    container_name: ironlms-mysql-dev
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      MYSQL_DATABASE: ironlms
      MYSQL_USER: appuser
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-apppass}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data_dev:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-papppass"]
      interval: 5s
      timeout: 3s
      retries: 30

  backend:
    image: maven:3.9-eclipse-temurin-21
    container_name: ironlms-backend-dev
    depends_on:
      db:
        condition: service_healthy
    working_dir: /app
    command: mvn -q -Dspring-boot.run.profiles=dev -DskipTests spring-boot:run
    ports:
      - "8080:8080"  # host:container
    environment:
      SERVER_PORT: 8080
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/ironlms?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: appuser
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD:-apppass}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS:-http://localhost:5173,http://localhost}
      JWT_SECRET: ${JWT_SECRET:-dev-secret-change-me}
      JWT_EXPIRATION: 86400
    volumes:
      - ../backend:/app
      - maven_cache:/root/.m2

  frontend:
    image: node:20-alpine
    container_name: ironlms-frontend-dev
    working_dir: /app
    # deps ставим один раз, исходники монтируем томом (HMR)
    command: sh -lc "yarn install --frozen-lockfile && yarn dev --host 0.0.0.0 --port 5173"
    ports:
      - "5173:5173"
    environment:
      VITE_API_URL: http://localhost:8080    # прямой вызов API из браузера
      YARN_CACHE_FOLDER: /tmp/.yarn-cache
    volumes:
      - ../frontend:/app
      - /app/node_modules   # анонимный том: не затирать node_modules файлами хоста
      - yarn_cache:/tmp/.yarn-cache
    depends_on:
      backend:
        condition: service_started

volumes:
  mysql_data_dev:
  maven_cache:
  yarn_cache:
